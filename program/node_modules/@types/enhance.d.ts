



interface Number {
    // [key: string]: any;
    second(): number
    minute(): number
    hour(): number
    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;

}

interface String {
    // [key: string]: any;
    byteLength: number
    isAscii(str: string): boolean
    isAsciiPrintable(str: string): boolean
    isAlpha(str: string): boolean
    isAlphaNumber(str: string): boolean
    isNumber(str: string): boolean
    isInteger(str: string): boolean

}
interface Object {
    // [key: string]: any;
    byteLength(obj: object): number
    clone(obj: object): object
    decycle(obj: object): object
}
// class Object {
//     static decycle(obj: object): object
// }
interface JSON {
    // [key: string]: any;
    byteLength(obj: object): number

}
interface Array<T> {
    // [key: string]: any;
    addFd(array: Array<any>, fd: number)
    deleteFd(array: Array<any>, fd: number)

}
// declare var Array: ArrayConstructor;