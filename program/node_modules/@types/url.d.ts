declare module "url" {
    import { ParsedUrlQueryInput } from 'querystring';
    namespace URL {

        export interface UrlObject {
            auth?: string | null;
            hash?: string | null;
            host?: string | null;
            hostname?: string | null;
            href?: string | null;
            pathname?: string | null;
            protocol?: string | null;
            search?: string | null;
            slashes?: boolean | null;
            port?: string | number | null;
            query?: string | null | ParsedUrlQueryInput;
        }

        export interface URLFormatOptions {
            auth?: boolean;
            fragment?: boolean;
            search?: boolean;
        }




        class URL {

            constructor(input: string, base?: string | URL);
            hash: string;
            host: string;
            hostname: string;
            port: number | string;
            pathname: string;
            search: string;
            readonly origin: string;
            password: string;
            username: string;
            protocol: string;
            href: string;
            toString(): string;
            toJSON(): string;

            static parse(urlStr: string): UrlObject;
            static parse(urlStr: string, parseQueryString?: false | undefined,): UrlObject;
            static format(URL: UrlObject, options?: URLFormatOptions): string;
            static pathToFileURL(path: String): URL;
            static fileURLToPath(url: string | URL): string;
        }
    }
    export = URL
}
